# This workflow will install dependencies and run nosetests on pushes to all branches
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python 3.8 test suite

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        # astropy-version: ["3.0", "4.0", "5.0"]
        astropy-version: ["3.0", "5.0"]
        # numpy-version: ["1.18", "1.19", "1.20", "1.21", "1.22", "1.23", "1.24"]
        numpy-version: ["1.18", "1.22", "1.24"]
        # scipy-version: ["1.8", "1.9", "1.10"]
        scipy-version: ["1.8", "1.10"]
        # os: [ubuntu-latest, macos-11]  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
        os: [ubuntu-latest]  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
        exclude:
        - astropy-version: "3.0"
          numpy-version: "1.22"
        # - astropy-version: "3.0"
        #   numpy-version: "1.23"
        - astropy-version: "3.0"
          numpy-version: "1.24"
        # - astropy-version: "4.0"
        #   numpy-version: "1.22"
        # - astropy-version: "4.0"
        #   numpy-version: "1.23"
        # - astropy-version: "4.0"
        #   numpy-version: "1.24"
        - astropy-version: "5.0"
          numpy-version: "1.18"
        # - astropy-version: "5.0"
        #   numpy-version: "1.19"
        #   # run a single build on macOS-10.15 with latest packages
        #   - os: macOS-10.15
        #     python-version: 3.6
        #     astropy-version: ""
        #     numpy-version: ""
        #     scipy-version: ""

    name: ${{ matrix.os }} python${{ matrix.python-version}} numpy${{ matrix.numpy-version }} scipy${{ matrix.scipy-version }} astropy${{ matrix.astropy-version}}
    steps:
    - name: Checkout PHOEBE
      uses: actions/checkout@v3

    # - name: Setup conda
    #   uses: conda-incubator/setup-miniconda@v2
    #   with:
    #     auto-update-conda: true
    #     python-version: ${{ matrix.python-version }}

    - name: Setup python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # - name: MacOS Xcode setup
    #   if: matrix.os == 'macOS-10.15'
    #   uses: maxim-lobanov/setup-xcode@v1
    #   with:
    #     xcode-version: latest-stable

    # - name: MacOS Setup # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-10.15-Readme.md
    #   if: matrix.os == 'macOS-10.15'
    #   run: |
    #     export CPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include

    - name: PHOEBE environment variables
      run: |
        export PHOEBE_ENABLE_PLOTTING='FALSE'
        export PHOEBE_UPDATE_PASSBAND_IGNORE_VERSION='TRUE'

    - name: Update pip
      run: |
        python -m pip install --upgrade pip

    - name: Install numpy${{ matrix.numpy-version }}, scipy${{ matrix.scipy-version }}, astropy${{ matrix.astropy-version }}
      run: |
        python -m pip install "numpy==${{ matrix.numpy-version }}.*" --no-cache-dir --ignore-installed
        python -m pip install "scipy==${{ matrix.scipy-version }}.*" --no-deps
        python -m pip install "astropy==${{ matrix.astropy-version }}.*" --no-deps
        python -m pip install rebound requests pytest asdf matplotlib sympy requests tqdm corner pyerfa

    - name: Run pipdeptree to see package dependencies
      run: |
        python -m pip install pipdeptree
        pipdeptree

    - name: Test numpy, scipy, astropy install/versions
      run: |
        python -c "import numpy, scipy, astropy; print('numpy: {}\nscipy: {}\nastropy: {}\n'.format(numpy.__version__, scipy.__version__, astropy.__version__))"

    - name: Install PHOEBE from source
      run: |
        python setup.py build && python setup.py install --user

    - name: Checkout photodynam
      uses: actions/checkout@v2
      with:
        repository: phoebe-project/photodynam
        path: photodynam

    - name: Install photodynam
      run: |
        cd photodynam
        make
        sudo cp photodynam /usr/local/bin/
        python setup.py build && python3 setup.py install --user
        cd ..

    - name: Test photodynam install
      run: |
        python -c "import photodynam"

    - name: Run tests
      run: |
        # nosetests -v -s -d -w tests/nosetests/
        pytest --verbose --capture=no --full-trace tests/nosetests/

    # - name: Checkout benchmarks
    #   if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == 3.6 && matrix.astropy-version == '' && matrix.numpy-version == '' && matrix.scipy-version == ''}}
    #   uses: actions/checkout@v2
    #   with:
    #     repository: phoebe-project/phoebe2-benchmark
    #     path: phoebe2-benchmark

    # - name: Run benchmarks
    #   if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == 3.6 && matrix.astropy-version == '' && matrix.numpy-version == '' && matrix.scipy-version == ''}}
    #   run: |
    #     cp ./phoebe2-benchmark/*.log ./tests/benchmark/ 2>/dev/null || :
    #     cd tests && python run_tests.py benchmark
    #     cp ./benchmark/*.profile ../phoebe2-benchmark/ 2>/dev/null || :
    #     cp ./benchmark/*.log ../phoebe2-benchmark/ 2>/dev/null || :
    #     cp ./benchmark/*.log.png ../phoebe2-benchmark 2>/dev/null || :
    #     cd ../phoebe2-benchmark
    #     git add *.profile
    #     git add *.log
    #     git add *.png
    #     git config --global user.email "benchmarks"
    #     git config --global user.name "benchmarks"
    #     git config -l | grep 'http\..*\.extraheader' | cut -d= -f1 | xargs -L1 git config --unset-all
    #     git commit -m "updating benchmarks" -m "branch: ${{ github.ref }}   commit: https://github.com/phoebe-project/phoebe2/commit/${{ github.sha }}"
    #     git push -q -f https://kecnry:${{ secrets.GH_API_KEY }}@github.com/phoebe-project/phoebe2-benchmark master
