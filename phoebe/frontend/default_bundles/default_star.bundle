[
{
"qualifier": "t0",
"context": "system",
"description": "Time at which all values are provided.  For values with time-derivatives, this defines their zero-point.",
"value": 0.0,
"default_unit": "d",
"limits": [
null,
null
],
"copy_for": false,
"latexfmt": "t_0",
"Class": "FloatParameter"
},
{
"qualifier": "ra",
"context": "system",
"description": "Right ascension",
"value": 0.0,
"default_unit": "deg",
"limits": [
null,
null
],
"copy_for": false,
"advanced": true,
"latexfmt": "\\alpha",
"Class": "FloatParameter"
},
{
"qualifier": "dec",
"context": "system",
"description": "Declination",
"value": 0.0,
"default_unit": "deg",
"limits": [
null,
null
],
"copy_for": false,
"advanced": true,
"latexfmt": "\\delta",
"Class": "FloatParameter"
},
{
"qualifier": "distance",
"context": "system",
"description": "Distance to the system",
"value": 1.0,
"default_unit": "m",
"limits": [
null,
null
],
"copy_for": false,
"latexfmt": "d",
"Class": "FloatParameter"
},
{
"qualifier": "vgamma",
"context": "system",
"description": "Constant barycentric systemic velocity (in the direction of positive RV or negative vz)",
"value": 0.0,
"default_unit": "km / s",
"limits": [
null,
null
],
"copy_for": false,
"latexfmt": "v_\\gamma",
"Class": "FloatParameter"
},
{
"qualifier": "ebv",
"context": "system",
"description": "Extinction E(B-V)",
"value": 0.0,
"default_unit": "",
"limits": [
null,
null
],
"copy_for": false,
"latexfmt": "E(B-V)",
"Class": "FloatParameter"
},
{
"qualifier": "Av",
"context": "system",
"description": "Extinction Av",
"value": 0.0,
"default_unit": "",
"limits": [
null,
null
],
"copy_for": false,
"latexfmt": "A_v",
"Class": "FloatParameter"
},
{
"qualifier": "Rv",
"context": "system",
"description": "Extinction law parameter",
"value": 3.1,
"default_unit": "",
"limits": [
null,
null
],
"copy_for": false,
"latexfmt": "R_v",
"Class": "FloatParameter"
},
{
"qualifier": "hierarchy",
"context": "system",
"description": "Hierarchy representation",
"value": "star:starA",
"copy_for": false,
"advanced": true,
"Class": "HierarchyParameter"
},
{
"qualifier": "requiv",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Equivalent radius",
"value": 1.0,
"default_unit": "solRad",
"limits": [
1e-06,
null
],
"copy_for": false,
"latexfmt": "R_{{ \\mathrm{{ equiv }}, \\mathrm{{ {component} }} }}",
"Class": "FloatParameter"
},
{
"qualifier": "requiv_max",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Critical (maximum) value of the equivalent radius for the given morphology",
"value": 10.0,
"default_unit": "solRad",
"limits": [
0.0,
null
],
"copy_for": false,
"latexfmt": "R_{{ \\mathrm{{ equiv }}, \\mathrm{{ max }}, \\mathrm{{ {component} }} }}",
"Class": "FloatParameter"
},
{
"qualifier": "requiv_min",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Critical (minimum) value of the equivalent radius for the given morphology",
"value": 0.1,
"default_unit": "solRad",
"limits": [
0.0,
null
],
"visible_if": "hierarchy.is_contact_binary:True",
"copy_for": false,
"latexfmt": "R_{{ \\mathrm{{ equiv }}, \\mathrm{{ min }}, \\mathrm{{ {component} }} }}",
"Class": "FloatParameter"
},
{
"qualifier": "teff",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Mean effective temperature",
"value": 6000.0,
"default_unit": "K",
"limits": [
300.0,
null
],
"copy_for": false,
"latexfmt": "T_{{ \\mathrm{{ eff }}, \\mathrm{{ {component} }} }}",
"Class": "FloatParameter"
},
{
"qualifier": "abun",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Abundance/Metallicity",
"value": 0.0,
"default_unit": "",
"limits": [
null,
null
],
"visible_if": "hierarchy.is_contact_binary:False",
"copy_for": false,
"Class": "FloatParameter"
},
{
"qualifier": "logg",
"component": "starA",
"kind": "star",
"context": "component",
"description": "logg at requiv",
"value": 4.438067632266453,
"default_unit": "",
"limits": [
null,
null
],
"copy_for": false,
"latexfmt": "\\mathrm{{log}}g_\\mathrm{{ {component} }}",
"Class": "FloatParameter"
},
{
"qualifier": "syncpar",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Synchronicity parameter",
"value": 1.0,
"default_unit": "",
"limits": [
0.0,
null
],
"visible_if": "hierarchy.is_binary:True",
"copy_for": false,
"latexfmt": "F_\\mathrm{{ {component} }}",
"Class": "FloatParameter"
},
{
"qualifier": "period",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Rotation period (wrt the sky)",
"value": 1.0,
"default_unit": "d",
"limits": [
1e-06,
null
],
"copy_for": false,
"advanced": true,
"latexfmt": "P_\\mathrm{{ {component} }}",
"Class": "FloatParameter"
},
{
"qualifier": "freq",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Rotation frequency (wrt the sky)",
"value": 6.283185,
"default_unit": "rad / d",
"limits": [
0.0,
null
],
"copy_for": false,
"advanced": true,
"latexfmt": "f_\\mathrm{{ {component} }}",
"Class": "FloatParameter"
},
{
"qualifier": "pitch",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Pitch of the stellar rotation axis wrt the orbital inclination",
"value": 0.0,
"default_unit": "deg",
"limits": [
null,
null
],
"visible_if": "hierarchy.is_contact_binary:False,hierarchy.is_binary:True",
"copy_for": false,
"advanced": true,
"Class": "FloatParameter"
},
{
"qualifier": "yaw",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Yaw of the stellar rotation axis wrt the orbital longitude of ascending node",
"value": 0.0,
"default_unit": "deg",
"limits": [
null,
null
],
"visible_if": "hierarchy.is_contact_binary:False,hierarchy.is_binary:True",
"copy_for": false,
"advanced": true,
"Class": "FloatParameter"
},
{
"qualifier": "incl",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Inclination of the stellar rotation axis",
"value": 90.0,
"default_unit": "deg",
"limits": [
null,
null
],
"visible_if": "hierarchy.is_contact_binary:False",
"copy_for": false,
"advanced": true,
"latexfmt": "i_\\mathrm{{ {component} }}",
"Class": "FloatParameter"
},
{
"qualifier": "long_an",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Longitude of the ascending node (ie. equator) of the star",
"value": 0.0,
"default_unit": "deg",
"limits": [
null,
null
],
"visible_if": "hierarchy.is_contact_binary:False",
"copy_for": false,
"advanced": true,
"Class": "FloatParameter"
},
{
"qualifier": "gravb_bol",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Bolometric gravity brightening",
"value": 0.32,
"default_unit": "",
"limits": [
0.0,
1.0
],
"copy_for": false,
"Class": "FloatParameter"
},
{
"qualifier": "irrad_frac_refl_bol",
"component": "starA",
"kind": "star",
"context": "component",
"description": "ratio of incident bolometric light that is used for reflection/irradiation (heating without redistribution)",
"value": 0.6,
"default_unit": "",
"limits": [
0.0,
1.0
],
"copy_for": false,
"Class": "FloatParameter"
},
{
"qualifier": "irrad_frac_lost_bol",
"component": "starA",
"kind": "star",
"context": "component",
"description": "ratio of incident bolometric light that is lost/ignored",
"value": 0.4,
"default_unit": "",
"limits": [
0.0,
1.0
],
"copy_for": false,
"advanced": true,
"Class": "FloatParameter"
},
{
"qualifier": "ld_mode_bol",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Mode to use for bolometric limb-darkening (used only for irradiation).",
"choices": [
"lookup",
"manual"
],
"value": "lookup",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "ld_func_bol",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Bolometric limb darkening model (used only for irradiation).",
"choices": [
"linear",
"logarithmic",
"quadratic",
"square_root",
"power"
],
"value": "logarithmic",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "ld_coeffs_source_bol",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Source for bolometric limb darkening coefficients (used only for irradiation; 'auto' to interpolate from the applicable table according to the 'atm' parameter, or the name of a specific atmosphere table)",
"choices": [
"auto",
"ck2004",
"phoenix"
],
"value": "auto",
"visible_if": "ld_mode_bol:lookup",
"copy_for": false,
"advanced": true,
"Class": "ChoiceParameter"
},
{
"qualifier": "ld_coeffs_bol",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Bolometric limb darkening coefficients (used only for irradiation).",
"value": [
0.5,
0.5
],
"default_unit": "",
"visible_if": "ld_mode_bol:manual",
"required_shape": [
null
],
"copy_for": false,
"Class": "FloatArrayParameter"
},
{
"qualifier": "mass",
"component": "starA",
"kind": "star",
"context": "component",
"description": "Mass",
"value": 1.0,
"default_unit": "solMass",
"limits": [
null,
null
],
"copy_for": false,
"latexfmt": "M_\\mathrm{{ {component} }}",
"Class": "FloatParameter"
},
{
"qualifier": "ebv",
"kind": "extinction",
"context": "constraint",
"description": "expression that determines the constraint",
"value": "{Av@system} / {Rv@system}",
"default_unit": "",
"constraint_func": "extinction",
"constraint_kwargs": {},
"constraint_addl_vars": [],
"in_solar_units": true,
"Class": "ConstraintParameter"
},
{
"qualifier": "freq",
"component": "starA",
"kind": "star",
"context": "constraint",
"description": "expression that determines the constraint",
"value": "6.283185 / {period@starA@component}",
"default_unit": "rad / d",
"constraint_func": "freq",
"constraint_kwargs": {
"component": "starA"
},
"constraint_addl_vars": [],
"in_solar_units": true,
"Class": "ConstraintParameter"
},
{
"qualifier": "logg",
"component": "starA",
"kind": "star",
"context": "constraint",
"description": "expression that determines the constraint",
"value": "log10((({mass@starA@component} / ({requiv@starA@component} ** 2.000000)) * 2942.206218) * 9.319541)",
"default_unit": "",
"constraint_func": "logg",
"constraint_kwargs": {
"component": "starA"
},
"constraint_addl_vars": [],
"in_solar_units": true,
"Class": "ConstraintParameter"
},
{
"qualifier": "irrad_frac_lost_bol",
"component": "starA",
"kind": "star",
"context": "constraint",
"description": "expression that determines the constraint",
"value": "1.000000 - {irrad_frac_refl_bol@starA@component}",
"default_unit": "",
"constraint_func": "irrad_frac",
"constraint_kwargs": {
"component": "starA"
},
"constraint_addl_vars": [],
"in_solar_units": true,
"Class": "ConstraintParameter"
},
{
"qualifier": "sample_from",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "distributions or solutions to use for sampling.  If pointing to a solution, adopt_solution(as_distributions=True, **kwargs) will be called to create a temporary distribution which will be removed automatically.  If all distributions are delta functions (face-values), sample_mode and sample_num will be ignored with a warning.",
"choices": [],
"value": [],
"copy_for": false,
"Class": "SelectParameter"
},
{
"qualifier": "sample_from_combine",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Method to use to combine multiple distributions from sample_from for the same parameter.  first: ignore duplicate entries and take the first in the sample_from parameter",
"choices": [
"first"
],
"value": "first",
"visible_if": "sample_from:<notempty>",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "sample_num",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Number of forward models to run sampling from the distributions defined in sample_from and sample_from_combine.",
"value": 10,
"limits": [
8,
1000000.0
],
"visible_if": "sample_from:<notempty>",
"copy_for": false,
"Class": "IntParameter"
},
{
"qualifier": "sample_mode",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Mode to use when exposing model after sampling.  all: expose all sampled forward-models.  median: only return the median of all sampled models.  1/3/5-sigma: expose the synthetic variable at the median and +/- n-sigma.",
"choices": [
"all",
"median",
"1-sigma",
"3-sigma",
"5-sigma"
],
"value": "1-sigma",
"visible_if": "sample_from:<notempty>",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "expose_samples",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Whether to expose failed samples along with the simplified error messages.",
"value": true,
"visible_if": "sample_from:<notempty>",
"copy_for": false,
"Class": "BoolParameter"
},
{
"qualifier": "expose_failed",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Whether to expose failed samples along with the simplified error messages.",
"value": true,
"visible_if": "sample_from:<notempty>",
"copy_for": false,
"Class": "BoolParameter"
},
{
"qualifier": "comments",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "User-provided comments for these compute-options.  Feel free to place any notes here - if not overridden, they will be copied to any resulting models.",
"value": "",
"copy_for": false,
"Class": "StringParameter"
},
{
"qualifier": "enabled",
"dataset": "_default",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Whether to create synthetics in compute/solver run",
"value": true,
"copy_for": {
"context": "dataset",
"dataset": "*"
},
"Class": "BoolParameter"
},
{
"qualifier": "enabled",
"feature": "_default",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Whether to enable the feature in compute/solver run",
"value": true,
"copy_for": {
"context": "feature",
"feature": "*"
},
"Class": "BoolParameter"
},
{
"qualifier": "dynamics_method",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Which method to use to determine the dynamics of components",
"choices": [
"keplerian"
],
"value": "keplerian",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "ltte",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Correct for light travel time effects",
"value": false,
"copy_for": false,
"Class": "BoolParameter"
},
{
"qualifier": "irrad_method",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Which method to use to handle all irradiation effects (reflection, redistribution)",
"choices": [
"none",
"wilson",
"horvat"
],
"value": "none",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "boosting_method",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Type of boosting method",
"choices": [
"none"
],
"value": "none",
"copy_for": false,
"advanced": true,
"Class": "ChoiceParameter"
},
{
"qualifier": "mesh_method",
"component": "_default",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Which method to use for discretizing the surface",
"choices": [
"marching"
],
"value": "marching",
"visible_if": "hierarchy.is_meshable:true",
"copy_for": {
"kind": [
"star",
"envelope"
],
"component": "*"
},
"Class": "ChoiceParameter"
},
{
"qualifier": "ntriangles",
"component": "_default",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Requested number of triangles (won't be exact).",
"value": 1500,
"limits": [
100,
null
],
"visible_if": "mesh_method:marching,hierarchy.is_meshable:true",
"copy_for": {
"kind": [
"star",
"envelope"
],
"component": "*"
},
"Class": "IntParameter"
},
{
"qualifier": "distortion_method",
"component": "_default",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Method to use for distorting stars",
"choices": [
"roche",
"rotstar",
"sphere",
"none"
],
"value": "rotstar",
"visible_if": "mesh_method:marching,hierarchy.is_meshable:true",
"copy_for": {
"kind": [
"star"
],
"component": "*"
},
"Class": "ChoiceParameter"
},
{
"qualifier": "eclipse_method",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Type of eclipse algorithm",
"choices": [
"native",
"only_horizon"
],
"value": "native",
"copy_for": false,
"advanced": true,
"Class": "ChoiceParameter"
},
{
"qualifier": "horizon_method",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Type of horizon method",
"choices": [
"boolean"
],
"value": "boolean",
"visible_if": "eclipse_method:native",
"copy_for": false,
"advanced": true,
"Class": "ChoiceParameter"
},
{
"qualifier": "atm",
"component": "_default",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Atmosphere table",
"choices": [
"extern_planckint",
"phoenix",
"ck2004",
"blackbody",
"extern_atmx"
],
"value": "ck2004",
"copy_for": {
"kind": [
"star"
],
"component": "*"
},
"Class": "ChoiceParameter"
},
{
"qualifier": "fti_method",
"dataset": "_default",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "How to handle finite-time integration (when non-zero exptime)",
"choices": [
"none",
"oversample"
],
"value": "none",
"copy_for": {
"kind": [
"lc"
],
"dataset": "*"
},
"Class": "ChoiceParameter"
},
{
"qualifier": "fti_oversample",
"dataset": "_default",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Number of times to sample per-datapoint for finite-time integration",
"value": 5,
"limits": [
1,
null
],
"visible_if": "fti_method:oversample",
"copy_for": {
"kind": [
"lc"
],
"dataset": "*"
},
"Class": "IntParameter"
},
{
"qualifier": "rv_method",
"component": "_default",
"dataset": "_default",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Method to use for computing RVs (must be flux-weighted for Rossiter-McLaughlin effects)",
"choices": [
"flux-weighted",
"dynamical"
],
"value": "flux-weighted",
"copy_for": {
"component": {
"kind": "star"
},
"dataset": {
"kind": "rv"
}
},
"Class": "ChoiceParameter"
},
{
"qualifier": "rv_grav",
"component": "_default",
"dataset": "_default",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Whether gravitational redshift effects are enabled for RVs",
"value": false,
"visible_if": "rv_method:flux-weighted",
"copy_for": {
"component": {
"kind": "star"
},
"dataset": {
"kind": "rv"
}
},
"Class": "BoolParameter"
},
{
"qualifier": "mesh_method",
"component": "starA",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Which method to use for discretizing the surface",
"choices": [
"marching"
],
"value": "marching",
"visible_if": "hierarchy.is_meshable:true",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "ntriangles",
"component": "starA",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Requested number of triangles (won't be exact).",
"value": 1500,
"limits": [
100,
null
],
"visible_if": "mesh_method:marching,hierarchy.is_meshable:true",
"copy_for": false,
"Class": "IntParameter"
},
{
"qualifier": "distortion_method",
"component": "starA",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Method to use for distorting stars",
"choices": [
"roche",
"rotstar",
"sphere",
"none"
],
"value": "rotstar",
"visible_if": "mesh_method:marching,hierarchy.is_meshable:true",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "atm",
"component": "starA",
"compute": "phoebe01",
"kind": "phoebe",
"context": "compute",
"description": "Atmosphere table",
"choices": [
"extern_planckint",
"phoenix",
"ck2004",
"blackbody",
"extern_atmx"
],
"value": "ck2004",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "default_time_source",
"context": "figure",
"description": "Source to use for highlight/uncover time for any figure in which time_source is set to default.",
"choices": [
"None",
"manual"
],
"value": "None",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "default_time",
"context": "figure",
"description": "Times to use for highlighting/uncovering if default_time_source=manual.",
"value": 0.0,
"default_unit": "d",
"limits": [
null,
null
],
"visible_if": "default_time_source:manual",
"copy_for": false,
"Class": "FloatParameter"
},
{
"qualifier": "latex_repr",
"component": "starA",
"kind": "star",
"context": "figure",
"description": "Representation to use in place of the component label when rendering latex representations of parameters.  If blank, will use the labels directly.",
"value": "",
"copy_for": false,
"Class": "StringParameter"
},
{
"qualifier": "color",
"component": "starA",
"kind": "star",
"context": "figure",
"description": "Color to use for figures in which color_source is set to component",
"choices": [
"black",
"blue",
"orange",
"green",
"red",
"purple",
"ping",
"pink",
"yellow"
],
"value": "blue",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "marker",
"component": "starA",
"kind": "star",
"context": "figure",
"description": "Marker (datasets only, not models) to use for figures in which marker_source is set to component",
"choices": [
"None",
".",
"o",
"+",
"s",
"*",
"x",
"v",
"^",
"<",
">",
"p",
"h",
"o",
"D"
],
"value": ".",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "linestyle",
"component": "starA",
"kind": "star",
"context": "figure",
"description": "Linestyle to use for figures in which linestyle_source is set to component",
"choices": [
"None",
"solid",
"dashed",
"dotted",
"dashdot"
],
"value": "solid",
"copy_for": false,
"Class": "ChoiceParameter"
},
{
"qualifier": "phoebe_version",
"context": "setting",
"description": "Version of PHOEBE",
"value": "2.3.2",
"copy_for": false,
"readonly": true,
"advanced": true,
"Class": "StringParameter"
},
{
"qualifier": "dict_filter",
"context": "setting",
"description": "Filters to use when using dictionary access",
"value": {},
"copy_for": false,
"advanced": true,
"Class": "DictParameter"
},
{
"qualifier": "dict_set_all",
"context": "setting",
"description": "Whether to set all values for dictionary access that returns more than 1 result",
"value": false,
"copy_for": false,
"advanced": true,
"Class": "BoolParameter"
},
{
"qualifier": "run_checks_compute",
"context": "setting",
"description": "Compute options to use when calling run_checks/run_checks_compute or within interactive checks.",
"choices": [
"phoebe01"
],
"value": [
"*"
],
"copy_for": false,
"Class": "SelectParameter"
},
{
"qualifier": "run_checks_solver",
"context": "setting",
"description": "Solver options to use when calling run_checks/run_checks_solver or within interactive checks.",
"choices": [],
"value": [
"*"
],
"copy_for": false,
"Class": "SelectParameter"
},
{
"qualifier": "run_checks_solution",
"context": "setting",
"description": "Solutions to use when calling run_checks/run_checks_solution or within interactive checks.",
"choices": [],
"value": [],
"copy_for": false,
"Class": "SelectParameter"
},
{
"qualifier": "run_checks_figure",
"context": "setting",
"description": "Figures to use when calling run_checks/run_checks_figure or within interactive checks.",
"choices": [],
"value": [],
"copy_for": false,
"Class": "SelectParameter"
},
{
"qualifier": "auto_add_figure",
"context": "setting",
"description": "Whether to automatically add figure parameters when a dataset is added with a new dataset type, or a solution is added.",
"value": true,
"copy_for": false,
"Class": "BoolParameter"
},
{
"qualifier": "auto_remove_figure",
"context": "setting",
"description": "Whether to automatically remove figure parameters when the referenced dataset/solution are removed.",
"value": true,
"copy_for": false,
"Class": "BoolParameter"
},
{
"qualifier": "web_client",
"context": "setting",
"description": "Whether to default to using the web-client over a locally installed desktop-client when opening the UI from the desktop client.",
"value": false,
"copy_for": false,
"advanced": true,
"Class": "BoolParameter"
},
{
"qualifier": "web_client_url",
"context": "setting",
"description": "Default location of web-client.  Will only be used if web_client is True.",
"value": "ui.phoebe-project.org",
"copy_for": false,
"advanced": true,
"Class": "StringParameter"
}
]