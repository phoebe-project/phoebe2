(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     46471,       1218]
NotebookOptionsPosition[     44338,       1136]
NotebookOutlinePosition[     44672,       1151]
CellTagsIndexPosition[     44629,       1148]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Limb - darkening models - integral over halfsphere", "Title",
 CellChangeTimes->{{3.678750013048703*^9, 3.678750037991682*^9}, {
  3.6787500818830748`*^9, 3.6787500903319283`*^9}}],

Cell["Author : Martin Horvat, July 2016", "Text",
 CellChangeTimes->{{3.6787500650294533`*^9, 3.67875007711672*^9}}],

Cell[CellGroupData[{

Cell["Logarithmic", "Subsection",
 CellChangeTimes->{{3.6787691620031757`*^9, 3.67876917458116*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
  RowBox[{"2", "*", "Pi", "*", 
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", "theta", "]"}]}], ")"}]}], "-", 
        RowBox[{"y", "*", 
         RowBox[{"Cos", "[", "theta", "]"}], "*", 
         RowBox[{"Log", "[", 
          RowBox[{"Cos", "[", "theta", "]"}], "]"}]}]}], ")"}], "*", 
      RowBox[{"Cos", "[", "theta", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.678746858522234*^9, 3.6787468613233356`*^9}, {
  3.678747002635318*^9, 3.678747024404529*^9}, {3.678747559510954*^9, 
  3.6787476193296633`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "9"], " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{"9", "-", 
    RowBox[{"3", " ", "x"}], "+", 
    RowBox[{"2", " ", "y"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.678747593819337*^9, 3.678747622224172*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "theta", "]"}]}], ")"}]}], "-", 
      RowBox[{"y", "*", 
       RowBox[{"Cos", "[", "theta", "]"}], "*", 
       RowBox[{"Log", "[", 
        RowBox[{"Cos", "[", "theta", "]"}], "]"}]}]}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "0.5"}], ",", 
      RowBox[{"y", "\[Rule]", 
       RowBox[{"-", "0.5"}]}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"theta", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6787690724460583`*^9, 3.6787691244256287`*^9}, {
  3.678770755073717*^9, 3.678770761501375*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
yNbNqg==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.44},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6787690993280153`*^9, 3.6787691247777452`*^9}, {
  3.678770757595984*^9, 3.678770762128951*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}]}], "-", 
      RowBox[{"y", "*", "u", "*", 
       RowBox[{"Log", "[", "u", "]"}]}]}], ",", 
     RowBox[{"1", ">", "u", ">", "0"}]}], "}"}], ",", "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.678770421114855*^9, 3.678770435897214*^9}, {
  3.678770467338745*^9, 3.6787704698960323`*^9}}],

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], " ", "x"}], "-", 
      RowBox[{"u", " ", "y", " ", 
       RowBox[{"Log", "[", "u", "]"}]}]}], ",", 
     RowBox[{"1", ">", "u", ">", "0"}]}], "}"}], ",", "u"}], "]"}]], "Output",\

 CellChangeTimes->{3.678770436720438*^9, 3.678770470292954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"u", " ", 
    RowBox[{"Log", "[", "u", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678770512111393*^9, 3.678770520264716*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwV13k4VV0XAHBJvYpQIjSgpCJThlAszaLIWEqSoZBEMs9CoRASUmRIb7yh
iDJsU0gZ7nXv2fciIZmK22Cq0Le/v87ze87Z09n7rLWOtN0VU0duLi4u5SVc
XP+/GjiO0mrHLHRT1keIWeul1ow8s7T7KK4GM8H/PQs2c0CifMy4F+IH4fbN
xpuhd6+iVzXBrj6yRmCy+EZ44ZQ/UtRam/dA3BwMA46lp+FQxCU8lvRX0gos
BV50CJ+OQLSv1eHnZW0g5vuaUIWqG0i7U7U4UdwBPBTX/uuvGoe26DzMb8i4
AOs8Uqde5Scg/qe8mVOSztCodXG2fmci+nD9w21LWTfY9XpiuZPkXVR7v0H9
tvg12JCi1/WuPB2p0X1Ltp7xgq1JFe8uCWWgf3kVFWoyvMHi4KczJxweoESv
VBmOpB8YMAryJhYzkb3xZWET2WBQG7slnR+eja6HxfrGiEdAyES9jfTefFSz
4cJLy9cRkNc3L6Hclo/myvWmNp+JhNA3vt+Xn32CXCenr1RmRMHFhkPrVfz+
ReZnbC9+lYyG4/O1KVa5BUhWXd3SSDYO6lvTEjvfFSGHaxzxaPFkaGxT7POt
fYFUlyb6P3dPhiN5Ei9kuUoRd6JaT09zMlRVPLrvA6Uos8gvQ9H7LpR9W/ec
t7oUdY8vlWTQUyA5yzFTsLQMGZ8Xk5G8lQbl07GMd4nlSNton2LZ4kNYXfq0
R1WiEvEmH3307XsujMjxSNRV1aI/mgN/HknkgYj3ax/Brlo0+cHX0uxAHqRc
LdttMFaLurY94XuZnAcquSLXIkXq0MPK5d4Bux8DV6guFr1ch9Q+NRgsD8qH
23E8dg1i9ch2l+7Uet6n0NEXO7DBvgGVd+46cmRTEQiaHfpz9e0bFDf2VX/n
4SL4vqO07XzPG3SBO99gtVsRDPWLjhyYeINE1dYb9VQXQbL8dqVBoSZU+S7s
abliMazJrG2/ebIJrVdyKTFsL4ZteHVW7GAT6p7WRp6rnoPy9OeZVk4zOnW9
t7shthS4VDt7x8beoislngrk5AAj2tFXsLQN/UigWpYsQVAZaJo0YN2JWuqa
UMfeeoioXBL/opGGnP2OrrL62gjzLbH9WT/oqG7Frr+Fl5thyaRS4sGhLvQ4
p3FRYmsruFdEqyY3MJB7pPkAKLVCy8Au5fgmBtpzcajBQasVtDyZ6jffMlCn
HE/0s+OtYB0rdO5aBwP9KjkgvN+7FXi5wnXVexjoWG39NufmVpgOiWZZ/WCg
n721J8qd34G1p/9dVUkm0hOtzjZ79h5qHO1OnvBkIp67IlcOVbyHLRcUk5u8
mKhF2G3P7vr3EGuoJbbHl4mMV0syJKj3EP/XdW5TEBPZ8IctG1x4DzGlH3bQ
o5gogPuQk/vxNuD83sgYTmOil5PvFW5/bQM/x12GbTVMpNDcW9Ek1wER5V3F
/y2lkOjkpYkE9Q7wtgsqGV5GIS6RP9Jn9DpgZEsBYyMvhRh24rEciw4I+rw1
MoqfQoGLFmfFwjrgQVBE1j4RCr1X71jigjtAlp9ldE6WQup027zl+ztB5Qnf
p71HSHs9s8l/JztB7qelTfZ1Cv3O/PTg+c9OYKXs8zSIpJD0X8/jlXOdEGIf
vOJ7FIXcqpML33PTIE+7tFIrhkL/aFMuHFEahMe6HHiVQCFtVasRNaCBxJ3p
fR4PKJS19Vw/iqfBhS3MheYyCjVFcOJbkkl7NCe8r5xCE59CgJZGg6omqVcV
FaR9dtbDwRwadM1teZ5TSaGuTYPWyypoULd41cWpjkLLxRzZBv00OL3CxPi/
9xRyXXmJzlSmg33m8vJtgxR6XC360kCDDjERJnrxnyj00b0+De2hg52GyLbp
IQqZYvHz/x6mQ0PZH4GqEQpp5rZwAq3pINjy2UJjgkI8urKrZG7SYen+fTs/
zFIow2PgyNWPdHBb3ndslg8jSua2/MgQHc7ji1flV2EkyNIUtB6nwy6jKB4b
AYzCdROoQ9N0mHcxda8RwsiJDxzF+bqgyZ121VUEI7W8jPBajS7Yrzx4I2gT
Ru9YJ6sF4rpglree10eJtO8eEXFJ6gJDTbfha8oYafb6uL1J7YInofiYhwpG
uR/vSQbmdMH3awFljqoYBQ7jsLGKLmg9p7pEZzdGClMnDzd+6gJWyJKePF2M
4gVPdfhpMSD99BcT+2MYHV49uo2py4AtdMYK1eMYza/xDVU+yICfr4YslxiR
+YqmqowYMcDCYLYkzRgjvY2sJHMHBghePeX9yhSj73KnTinFM+DF5GRM2SmM
zA6fGhgaYoD9wyD3bHuMXgurdHwaY4C49s8EbQeMNg+sqB6cZMCzjOEQGvGP
gMrU/jkG/NF0af3jiFFCyaYTvfxMMGlliu93wuj9hs81XWpMYLhZDNx1Je9r
vLqQrsUEed9ovvWXMbpfnpJO02UCb/Mr3kxiF1N97w59JsypywXluGHEe7NA
4Z01E4rWc1k+dMfo4E+PjPoIJqTo1PNYX8OosNYgpi6aCVKBWSHtxMJxW3xr
45hgsYVFAy+MBrczzWpSmeB088LCJm+MQm00+V4XMmFlY6Bvhw9G1W8X/UoY
TDjkIaT9yx8jmXv4YjGbCbqtfgZWARjdcii2KOpjQlKdn0YFsfXf8yr/jTLJ
+vWzrwZi9FvtzeiTeSaYYqdOdhBGGlmxJ7NkKFBZdqPWIxSj4roQPz45Cnae
u6/aRCz/yfO+txIFH5YnmYmHYSQla/3xmDYF5nY+9yuJ+Qp3XvxlTAFcFjf/
Fo5RVJtUtIMFBeu9jHZrX8eIi7O2oOM0BVLzc2/DiWdUFibzHCn4/nRqUTAC
o/7yNm/TAAr+HXIqlojE6Ay7LrU6lII+cwWx08TU77LX26Mo+Hybo5JK/E7n
4eJiAgWd6c8ChaIwetngFlXwmMzXG/t8J1b+bPdEtJDMN9HQV/YGRgXLT7aG
lVAgKLxX4TRx1lEQOFVFwfny9rJq4tgOwRQeOgVNuVYGXjcxWv59acUVTNY3
f2I2kzh0zRy7u5cCnW6tM2+JvS36N5aMUJA+s+6oWDRG37wZsGGCghT0pEuH
+FJqy/kbPyhQkLETtSO27SnOO7tAQf6+iDePiXvmc5tbuDEI2N7Y1UxsuSlt
TJUXg/HnkVPDxIbnwxRWCmM4YDtFl4rBqCncy9hLDENJmta2vcR6uc4e/Rsx
5NcJaFgSa4yYlL3cjoHJTouIIi7mPYylFTEocUYaM4jl5bR/3VLFEKozU1tC
/NhQcf2cJobEYCG/N8RSlzfr2OtioPTDJzDx/TjRc+0HMAQL3ts0RixavDJM
6yiG9M3p/L+IE2iL2blGGBSKqPJ/Ysn+//zRKGiOYR+6JyVCHLV2ZNjfCgOf
9vYj0sRcGj28wzYY5j7R5XcSB5zskDNxwPDWZrBdnXjGt+FYlTOGoh2PlHWJ
3dPL3bZdwWD7yMrkEPGXyoKExGsYtnNZqhgSX/iQ+XzBD4OQTX+nMXH/YhLD
KQTDaPF+ZTNi/q+dsT4RGG4dDFO3INZkrzoQFY3B0MRExpLYocngd3IchpGn
k/P/v5/w4kZJThIGd767yJy4KqvR6XkqhpPCoa6mxKO3l0jVPSDv4+iXpf8f
b22ALu7IxqC/fk2UAbGeU0BcXz6Gp71KPw8Su1pUHJooxKDVEmL4//Wk7p+e
/1OCQefv3ngN4kalXaUryzHURWfXKBB/23DlkngVhmzLL+wtxBtWFm7eXoch
c4/pgBix/uwoW6MJg/P0aiY/8SOanb55J4ajZ6PCv5P9aK/J/GvHJOeJt3jv
IPHvgt6XHt0YpMM2DNGITaMst8YPYfjR9PjPf8TBnkm9D8bIels1XdOJn9p2
JhVOYsArZlojibn3GHC3zmGYvc82syJW3H7jFWsBg9d5z+B9xKdFGt1HuFkQ
qi+Zup34OUfnI88qFkRZJKX9JOfXLlelCqRZcG+9ck8gcdwdN08jWRbMHcmM
sCZ+HVwgd1aeBQWssU17iNdYbU3zV2fBOu4p2WnyfTWsEvcuO8qCw4f4Yq2J
v/22UGg0YoE+X2SdKvGG0cQhuhkLtkU9GF9BfK2e3+zbWRYYRsaIvCDfs4wP
l7L8VRYscF1hzJF4cMJBZ0TLhwWXnH/lNRMHmvg/1A9kwW3u/kt3iRnyU/wX
olgw0/GQqUAc0T8ylpXOAvb6MVlTEm8+H+3IEW1gQX1Q6jcnEr9kYrfF32lh
gdRUyV1pYof3If787SywO5zMwybxb9BI2YSbzQK1yDd6B4n7zO4sTkyy4CWX
qTY/iZess2ZWbyTYcO/s5ct2wRityyw4qCfFhur9P9v/IbbsX6pcuZUNA0mB
iwUkPjPsSpeXKLMhUDS35RuJ37SLIqUZh9kQdjtGyJXE91YPLHDtKhuuhXs/
2eGL0YoXSr8nfUh/A+orqki+0J+68dk5iA1CkqJ7jxM3e2tWnbtJ+i/ZK+5K
8ktjQJqz4UM26NxVq7hP8lF15JnGza1s6Hz+T109yV/FaR/9aNLd4MHj+lqF
5EfXHRu6d23rhku0HTGPLmK0/dUp7eSd3fDfVIyuEHEmi/bbcnc3KMtIWY6T
/Bq3rjGg91g3WGpxDt8h+fny3SdBIz7d0Cd8//xTG4zk7niELbR1g8Kkxko+
c4yGpZ4N2HR1Q+z41Q8nzTDKLh7fV8si4426ZuSQ/C/Rac99/ROxvm/fbhOy
XkHL67y/uqHTdtrXjNQPo7e0I4VleqBc+sbuk/oY5d1cGr3Dvwd6xGIsE/eQ
8zZ0M1gxpAec8w/av9Mm8R0ErqlG9MDpsCuRS4lPz4id04nrgWGFupUemqS+
clBUN8nugcTMxY371DHyA6sB39YeCOrmulWmiNHxmWdaLRK9cPHYr4JvUhhN
258ev1DZC53x+b8quEm+EP4jzKrtBWWksjJnCYl39fd1jjb1QsM/AsK3uIil
PyTI03rB1jBC4MwiheY+ntv9bZg8b4xLvv4i9fAZxwi/NR9ALPUks+8bqb/N
3Tfdcv4A077zn/9+oBDfwSjTknV9kP6gOxdIfbsXXVndtKEPjpwf5+EqJfWy
tlVnt3QfsJ8GR6PnFKIr7zTi2dkH8W0tXHuLKZS+kX70pF4fuEV/LZAroND2
2Y37Fpz6oJsnae3HLAodfFqmdPR1H/ys+qSQF0vqe6HP/APWH2H1qcLjz2wo
xF8jz4WP90NzZrrNsgUm0vE2Xmj43Q8uXoaKJpFMlJF7K2dLxgAc8mw9o7SC
/I9YqLWtMByE8cpodoYXA5UxHZNqZgZhLqxCbhmrC2m9L+YeTvkEwV/WWazR
7kJShy5MJx0cAv6hy8v2XKcjdTX1O6XDQ5DofsGev52GPv64/TYn8jNkr1D/
PbSGhr6qmkSK7xqGTJ/CiKs6nUj2i8L4kq5hSNHTXPaC3Y4aZbzo7mEjUOtg
KX15SRuKZzDtTWVGQWiWqtqm8Q5xzGrvcDeOAn3qYpKG/Vv03ELkgJbHGPDs
Vm6LsWxGOW3XHwyuGYdz4f7G2tZv0GyzdcCa+nHwC0sKG9jagPrvoGkhty8w
aCBOcxmtRTO0PeLhAl+BzXdcJiaiGrknb671q/oK1kdXXlpfWYHWtW0WGrKZ
gAHFY22mW0uRGbNwfsPiBMzmG9NfixahH+ceufY+nYS+uLaWmb5chGyLIgWO
cUBpVVaOn24Ket3hathnxAH5+VOegcN30UtdudXPTDgQO5ep6BN3FxVuyMs4
fpLcr6pxMe9LRums9Be37DgwmxS16llQEvI6ETWw0o8D/iy+zL7XCUhe76zO
P485kLog9tPTJgrJFkksxU84sJudpudTGIk2b2K1PC7gQLPmliSX3xFIbN7U
/HAJB+y55o9Jp1xHyyv0L0VWkf7n3PZ0vA9FA0pqaUu7OCCXkBti7eaNeh9+
t+licsCoUVzQkdcLsVYVyeSwOKBd+ZZ5PNsTtX/ZUby/jwP539esrWW6o6p8
yeawMQ40uQYcMva+gCpEP9wy+coh+//3msMTe/QiMt1UmsOBdmgA7W5b9NRe
pK92isxX/5W/sb8lyqPTcxJmOfD2R8lMcO8JlLUvwdn2NxnfNqbgXOBhlFF8
XEl5gQOqZ8xu3QzSQPck+ab//uVA9yNorx2zqPkfuWAsKg==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.36787942453999695`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.678770520670371*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonlinear", "Subsection",
 CellChangeTimes->{{3.6787691620031757`*^9, 3.67876918287403*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
  RowBox[{"2", "*", "Pi", "*", 
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", "theta", "]"}]}], ")"}]}], "-", 
        RowBox[{"y", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "theta", "]"}]}], ")"}], "^", "p"}]}]}], 
       ")"}], "*", 
      RowBox[{"Cos", "[", "theta", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"p", ">", "1"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6787493363396177`*^9, 3.6787493429092913`*^9}}],

Cell[BoxData[
 RowBox[{"\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    FractionBox["x", "3"], "-", 
    FractionBox[
     RowBox[{"2", " ", "y"}], 
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "p"}], "+", 
      SuperscriptBox["p", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.678749344869585*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"x", " ", "u"}], " ", "-", " ", 
      RowBox[{"y", " ", 
       RowBox[{"u", "^", "3"}]}]}], ",", 
     RowBox[{"1", ">", "u", ">", "0"}]}], "}"}], ",", "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.6787701158300533`*^9, 3.678770136651881*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"1", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "\[Equal]", "0"}], "&&", 
             RowBox[{"x", "\[Equal]", "0"}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "\[Equal]", "0"}], "&&", 
             RowBox[{"x", "<", "0"}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", ">", "0"}], "&&", 
             RowBox[{"x", "\[LessEqual]", 
              RowBox[{"-", "y"}]}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "<", "0"}], "&&", 
             RowBox[{"x", "\[LessEqual]", "0"}]}], ")"}]}]},
         {
          RowBox[{"1", "-", "x"}], 
          RowBox[{
           RowBox[{"y", "\[Equal]", "0"}], "&&", 
           RowBox[{"x", ">", "0"}]}]},
         {
          RowBox[{
           FractionBox["1", "9"], " ", 
           RowBox[{"(", 
            RowBox[{"9", "-", 
             RowBox[{"2", " ", 
              SqrtBox["3"], " ", 
              SqrtBox[
               RowBox[{"-", 
                FractionBox[
                 SuperscriptBox["x", "3"], "y"]}]]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "<", "0"}], "&&", 
             RowBox[{"x", "\[Equal]", 
              RowBox[{
               RowBox[{"-", "3"}], " ", "y"}]}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "<", "0"}], "&&", 
             RowBox[{"0", "<", "x", "<", 
              RowBox[{
               RowBox[{"-", "3"}], " ", "y"}]}]}], ")"}]}]},
         {
          RowBox[{"1", "-", "x", "-", "y"}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{"u", "\[Rule]", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            FractionBox["1", "2"], 
            RowBox[{
             RowBox[{"y", "\[Equal]", "0"}], "&&", 
             RowBox[{"x", "\[Equal]", "0"}]}]},
           {"Indeterminate", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "\[Equal]", "0"}], "&&", 
               RowBox[{"x", ">", "0"}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "\[Equal]", "0"}], "&&", 
               RowBox[{"x", "<", "0"}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", ">", "0"}], "&&", 
               RowBox[{"x", ">", 
                RowBox[{"-", "y"}]}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", ">", "0"}], "&&", 
               RowBox[{"x", "\[LessEqual]", 
                RowBox[{"-", "y"}]}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "<", "0"}], "&&", 
               RowBox[{"x", "\[Equal]", 
                RowBox[{
                 RowBox[{"-", "3"}], " ", "y"}]}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "<", "0"}], "&&", 
               RowBox[{"x", ">", 
                RowBox[{
                 RowBox[{"-", "3"}], " ", "y"}]}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "<", "0"}], "&&", 
               RowBox[{"x", "\[LessEqual]", "0"}]}], ")"}]}]},
           {
            RowBox[{"Root", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 SqrtBox["3"], " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox[
                    SuperscriptBox["x", "3"], "y"]}]]}], "+", 
                RowBox[{"9", " ", "x", " ", "#1"}], "+", 
                RowBox[{"9", " ", "y", " ", 
                 SuperscriptBox["#1", "3"]}]}], "&"}], ",", "2"}], "]"}], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.67877012878181*^9, 3.6787701370541067`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quadratic", "Subsection",
 CellChangeTimes->{{3.6787691620031757`*^9, 3.678769188621834*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
  RowBox[{"2", "*", "Pi", "*", 
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", "theta", "]"}]}], ")"}]}], "-", 
        RowBox[{"y", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "theta", "]"}]}], ")"}], "^", "2"}]}]}], 
       ")"}], "*", 
      RowBox[{"Cos", "[", "theta", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.67874820806784*^9, 3.678748218032445*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "6"]}], " ", "\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "6"}], "+", 
    RowBox[{"2", " ", "x"}], "+", "y"}], ")"}]}]], "Output",
 CellChangeTimes->{3.678748218653927*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"x", " ", "u"}], " ", "-", " ", 
      RowBox[{"y", " ", 
       RowBox[{"u", "^", "2"}]}]}], ",", 
     RowBox[{"1", ">", "u", ">", "0"}]}], "}"}], ",", "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.678769802983161*^9, 3.6787698631935167`*^9}, {
  3.678769922461858*^9, 3.678769929233672*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"1", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "\[Equal]", "0"}], "&&", 
             RowBox[{"x", "\[Equal]", "0"}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "\[Equal]", "0"}], "&&", 
             RowBox[{"x", "<", "0"}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", ">", "0"}], "&&", 
             RowBox[{"x", "\[LessEqual]", 
              RowBox[{"-", "y"}]}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "<", "0"}], "&&", 
             RowBox[{"x", "\[LessEqual]", "0"}]}], ")"}]}]},
         {
          RowBox[{"1", "-", "x"}], 
          RowBox[{
           RowBox[{"y", "\[Equal]", "0"}], "&&", 
           RowBox[{"x", ">", "0"}]}]},
         {
          RowBox[{"1", "-", "x", "-", "y"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", ">", "0"}], "&&", 
             RowBox[{"x", ">", 
              RowBox[{"-", "y"}]}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"y", "<", "0"}], "&&", 
             RowBox[{"x", ">", 
              RowBox[{
               RowBox[{"-", "2"}], " ", "y"}]}]}], ")"}]}]},
         {
          FractionBox[
           RowBox[{
            SuperscriptBox["x", "2"], "+", 
            RowBox[{"4", " ", "y"}]}], 
           RowBox[{"4", " ", "y"}]], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{"u", "\[Rule]", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            FractionBox["1", "2"], 
            RowBox[{
             RowBox[{"y", "\[Equal]", "0"}], "&&", 
             RowBox[{"x", "\[Equal]", "0"}]}]},
           {"Indeterminate", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "\[Equal]", "0"}], "&&", 
               RowBox[{"x", ">", "0"}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "\[Equal]", "0"}], "&&", 
               RowBox[{"x", "<", "0"}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", ">", "0"}], "&&", 
               RowBox[{"x", ">", 
                RowBox[{"-", "y"}]}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", ">", "0"}], "&&", 
               RowBox[{"x", "\[LessEqual]", 
                RowBox[{"-", "y"}]}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "<", "0"}], "&&", 
               RowBox[{"x", "\[Equal]", 
                RowBox[{
                 RowBox[{"-", "2"}], " ", "y"}]}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "<", "0"}], "&&", 
               RowBox[{"x", ">", 
                RowBox[{
                 RowBox[{"-", "2"}], " ", "y"}]}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "<", "0"}], "&&", 
               RowBox[{"x", "\[LessEqual]", "0"}]}], ")"}]}]},
           {
            RowBox[{"-", 
             FractionBox["x", 
              RowBox[{"2", " ", "y"}]]}], 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.678769863533235*^9, 3.678769929732053*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear", "Subsection",
 CellChangeTimes->{{3.6787691620031757`*^9, 3.678769188621834*^9}, {
  3.678769226922913*^9, 3.678769232564309*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
  RowBox[{"2", "*", "Pi", "*", 
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", "theta", "]"}]}], ")"}]}]}], ")"}], "*", 
      RowBox[{"Cos", "[", "theta", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.67874820806784*^9, 3.678748218032445*^9}, {
  3.678769235179858*^9, 3.678769253640977*^9}}],

Cell[BoxData[
 RowBox[{"\[Pi]", "-", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "x"}], "3"]}]], "Output",
 CellChangeTimes->{
  3.678748218653927*^9, {3.6787692432897167`*^9, 3.678769249985773*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "theta", "]"}]}], ")"}]}]}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", "0.1"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"theta", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6787690724460583`*^9, 3.6787691244256287`*^9}, {
  3.678769434982093*^9, 3.678769460934466*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
i1hJ49GhBVkO7jjdaG5qYuB/RP9CWQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.678769461400977*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sqrt-root", "Subsection",
 CellChangeTimes->{{3.6787691620031757`*^9, 3.6787692025851507`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
  RowBox[{"2", "*", "Pi", "*", 
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", "theta", "]"}]}], ")"}]}], "-", 
        RowBox[{"y", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"Cos", "[", "theta", "]"}], "]"}]}], ")"}]}]}], ")"}], 
      "*", 
      RowBox[{"Cos", "[", "theta", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.678748992374837*^9, 3.678748996863443*^9}}],

Cell[BoxData[
 RowBox[{"\[Pi]", " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    FractionBox["x", "3"], "-", 
    FractionBox["y", "5"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6787490026645203`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Uniform", "Subsection",
 CellChangeTimes->{{3.6787691620031757`*^9, 3.67876917458116*^9}, {
  3.6787692082387753`*^9, 3.6787692113027353`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
  RowBox[{"2", "*", "Pi", "*", 
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"1", "*", 
      RowBox[{"Cos", "[", "theta", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", "0", ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6787494498538218`*^9, 3.678749466499487*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.678749467178035*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 753},
WindowMargins->{{Automatic, 19}, {Automatic, 0}},
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 186, 2, 150, "Title"],
Cell[769, 26, 116, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[910, 31, 100, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[1035, 36, 962, 24, 121, "Input"],
Cell[2000, 62, 258, 7, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2295, 74, 845, 24, 55, "Input"],
Cell[3143, 100, 7698, 139, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10878, 244, 478, 13, 32, "Input"],
Cell[11359, 259, 428, 13, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11824, 277, 261, 7, 32, "Input"],
Cell[12088, 286, 7197, 130, 224, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19334, 422, 98, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[19457, 427, 958, 26, 121, "Input"],
Cell[20418, 455, 316, 10, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20771, 470, 365, 10, 32, "Input"],
Cell[21139, 482, 7043, 195, 222, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28231, 683, 99, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[28355, 688, 874, 24, 121, "Input"],
Cell[29232, 714, 248, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29517, 727, 414, 11, 32, "Input"],
Cell[29934, 740, 6396, 179, 134, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36379, 925, 145, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[36549, 931, 739, 19, 99, "Input"],
Cell[37291, 952, 196, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37524, 962, 599, 17, 55, "Input"],
Cell[38126, 981, 4106, 80, 230, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42281, 1067, 101, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[42407, 1072, 882, 24, 121, "Input"],
Cell[43292, 1098, 201, 6, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43542, 1110, 149, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[43716, 1116, 505, 12, 99, "Input"],
Cell[44224, 1130, 74, 1, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

