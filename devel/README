PHOEBE-0.30pre4 TOPLEVEL DOCUMENTATION                           March 16, 2005
-------------------------------------------------------------------------------

Hello and thank you for your interest in PHOEBE! :-)

THINGS YOU NEED TO KNOW
-----------------------

PHOEBE is free, completely free. It always was and it always will be. The only
price you have to pay is send the author a postcard - the address to send the
postcards to is given at the end of this README. I really like postcards, so
please send them - that's all I ask for my continuous work on developing PHOEBE!

PHOEBE is currently in its testing phase, which means that you may use it the
way you see fit, but you should be cautious and suspicious of the obtained
results. PHOEBE should run smoothly, but bugs may more-or-less frequently
pop up when using it for day-to-day work. It is thus of utmost importance that
you provide feed-back to the authors and us know your opinions and suggestions.
The best way to get in touch is via PHOEBE discussion mailing list, where both
developers and users share ideas and information on PHOEBE and eclipsing
binaries in general.

You may freely share PHOEBE with others as long as no undocumented changes
are imposed on the code. For further information please read the GNU/GPL
license in PHOEBE documentation. If you do feel you need to change the code,
be sure to distribute it only if the original version along with exact
changing policy is attached. You are welcome to discuss any ideas and
suggestions for modification on PHOEBE mailing lists.

Do you want to participate in PHOEBE development? That's great, we need your
help! Please contact us and we'll discuss what areas of PHOEBE development are
open for your contribution.

PHOEBE 0.30 is a complete rewrite of the stable 0.2x branch. It has already
been tested to a reasonable extent, but since both the logic and the structure
have changed significantly, some degree of caution should be present when
running PHOEBE. Using the scripter without documentation is difficult, users
should refer to PHOEBE API documentation on PHOEBE's homepage:

	http://phoebe.fiz.uni-lj.si/documentation/phoebe_api.ps.gz

That manual is strictly kept up-to-date and it should get you started
reasonably quickly.

As back-end, PHOEBE 0.30pre3 uses Wilson-Devinney's WD code released on
Oct 17, 2004. You do not need to obtain any WD sources separately, they are
already built into PHOEBE.

Two front-ends currently available are the interacive scripter command line and
the graphical user interface (GUI). The GUI is stripped of all callbacks to be
able to assess the scripter operability. It will be back online as soon as the
official 0.30 release is out, which is due in summer 2005.

REQUIREMENTS
------------

To successfully compile and build PHOEBE, you need:

- An ANSI-compliant machine (preferably Linux & Linux-compatible):

  PHOEBE has been successfully tested on the following platforms:

    * Ubuntu 5.04 (Hoary)  no issues  (development platform)
    * Debian Sarge         no issues
    * Linux Redhat 9.0     no issues
    * Fedora Core 3        no issues
    * Gentoo linux 2004    no issues
    * MS Windows/Cygwin    no issues

  If you ran PHOEBE successfully on a different platform, please inform the
  author. PHOEBE should run on virtually any ANSI-C compliant machine that
  supports GTK+ library.

- ANSI C compliant compiler (cc/gcc will do just fine),

- FORTRAN F77 compliant compiler (f77/g77 will do just fine),

- Lex-compatible lexer-generator (flex is the usual choice on GNU systems),

- Yacc-compatible parser-generator (bison is the usual choice on GNU systems).

OPTIONAL
--------

- GSL (GNU Scientific Library) support:

  External numerical algorithms that are or will be incorporated into PHOEBE
  will all be written with GSL algorithms. GSL is completely free numerical
  mathematics library released under GPL. For more information on GSL please
  visit:

    http://sources.redhat.com/gsl/

  Without GSL PHOEBE will still run, but all algorithms that aren't native to
  Wilson-Devinney code will not be compiled. It is strongly recommended you
  install GSL. It's a nice professional package, surely you want it anyway! ;)

- GNU readline library. This library enables history and name completion
  functionality in the interactive scripter.

- GTK+2.x graphical library. This is a standard component to virtually all
  Linuxes of today. It is used for the graphical user interface (the GUI).
  Please note that you need all the accompanying libraries too (namely GLib
  and libglade).

- Gtkdatabox library. This library is used for plotting and has replaced SM
  as the primary plotting interface. Ideally PHOEBE should have its own plotting
  functions, but unless someone jumps in and helps, I'd rather add new physics
  than enhance the interface.

- Van Hamme limb darkening tables may now be obtained from the PHOEBE CVS
  and later put to PHOEBE shared directory. You may set it up in 
  Settings->Configuration window.

- Super Mongo plotting package:

  Since SuperMongo is proprietary, its usage is not endorsed by PHOEBE.
  However, most astronomical facilities use SM for graphing and support
  is thus included. To use SuperMongo, you must explicitly add an extra
  switch to the ./configure command:

    ./configure --enable-sm

  Super Mongo must be installed completely, along with libraries and header
  files. These usually reside in /usr/local/lib and /usr/local/include:

    Header files:              Libraries:
      copyright.h                libdevices.a
      options.h                  libplotsub.a
      sm_declare.h               libutils.a

  If you don't have them, please ask your local administrator to install them
  for you. Usually you get along by compiling SM in ordinary fashion (there is
  no need to install a callable parser) and copying header files to your inclu-
  de directory (usually /usr/local/include).

  SuperMongo is called via function calls, so please compile the SM library
  with the default type double instead of float. Failing to do so will result
  in spurious warnings during compiling.

  BEFORE you first start PHOEBE, you should add appropriate devices to the
  Super Mongo plotting package device file. This file usually resides in:

    /usr/local/lib/sm/graphcap.local

  These lines don't get appended automatically, because there are many diffe-
  rent policies regarding proprietary software, which SM definitely is; thus
  you should manually add the following lines to that file:

    aspectgif|aspectGIF|GIF via PPM (using ppmtogif), 512x256:\
      :DV=raster:xr#512:yr#256:CL:\
      :EP=\001:OW=P6 512 256 255\n:\
      :SY=${BIN}/rasterise -r $0 $F - | ppmtogif > $1:\
      :tc=ppm:

    tinygif|tinyGIF|GIF via PPM (using ppmtogif), 256x192:\
      :DV=raster:xr#256:yr#192:CL:\
      :EP=\001:OW=P6 256 192 255\n:\
      :SY=${BIN}/rasterise -r $0 $F - | ppmtogif > $1:\
      :tc=ppm:

    aspectxpm|aspectXPM|XPM via PPM (using ppmtoxpm), 512x256:\
      :DV=raster:xr#512:yr#256:CL:\
      :EP=\001:OW=P6 512 256 255\n:\
      :SY=${BIN}/rasterise -r $0 $F - | ppmtoxpm > $1:\
      :tc=ppm:

    tinyxpm|tinyXPM|XPM via PPM (using ppmtoxpm), 256x192:\
      :DV=raster:xr#256:yr#192:CL:\
      :EP=\001:OW=P6 256 192 255\n:\
      :SY=${BIN}/rasterise -r $0 $F - | ppmtoxpm > $1:\
      :tc=ppm:

    starxpm|starXPM|XPM via PPM (using ppmtoxpm), 320x192:\
      :DV=raster:xr#320:yr#192:CL:\
      :EP=\001:OW=P6 320 192 255\n:\
      :SY=${BIN}/rasterise -r $0 $F - | ppmtoxpm > $1:\
      :tc=ppm:

  Maybe some day there will be a script within Makefile.am that will automate
  this process, but it is a long term plan.

- Debugging support:

  PHOEBE 0.30 is a prerelease (tagged with preN after the version number), so
  debugging is often necessary. If you want extensive debugging messages to be
  printed to stdout, configure phoebe with --enable-debug flag.

OBTAINING PHOEBE
----------------

PHOEBE may be obtained:

1. By downloading the stable release from PHOEBE homepage:

     http://phoebe.fiz.uni-lj.si

   This method is preferable for casual users. I will do my best to support
   your work with stable releases.

2. By checking out the daily version from anonymous CVS:

   Login:

   cvs -d :pserver:anonymous@deneb.ago.uni-lj.si:/root login

   [ hit <ENTER> for password ]

   The main program:

   cvs -d :pserver:anonymous@deneb.ago.uni-lj.si:/root checkout phoebe-dev

   Documentation (optional):

   cvs -d :pserver:anonymous@deneb.ago.uni-lj.si:/root checkout
                                                         documentation/phoebe

   Van Hamme limb darkening tables (optional):

   cvs -d :pserver:anonymous@deneb.ago.uni-lj.si:/root checkout catalogs/ld

   This method is preferable for testing users and contributors.

INSTALLATION
------------

Install by following generic instructions in INSTALL; to make a long story
short, this will work on all the above mentioned platforms:

	./configure
	make
	make check		(optional)
	su
	make install

IMPORTANT NOTICE FOR PRE-PHOEBE-0.30 USERS
------------------------------------------

PHOEBE layout is changed completely. The main engine is now a PHOEBE library
that contains all functions that are available in PHOEBE. This means that you
may use existing PHOEBE front-ends (the scripter or the GUI), but you may
also write your own front-ends and use PHOEBE as a standard library.

PHOEBE front-ends that are distributed with this version of PHOEBE are called
phoebe_scripter and phoebe_gui. Also, the installation directory has changed
from phoebe/ to phoebe2/ to enable both 0.2x and 0.3x versions to coexist on
the system.

PHOEBE no longer uses keywords, only qualifiers. For a complete list of
qualifiers along with their description please refer to PHOEBE API
documentation. Keyword files from older versions may be converted to the new
parameter file format by the conversion utilities in the tools/ directory:

	./convert < old_keyword_file.phoebe > new_parameter_file.phoebe


SETTING UP
----------

- When you first start PHOEBE, a configuration menu appears. You may access
  that menu at any time by passing the -c switch in command line. You have to
  supply PHOEBE with information on where to find or expect certain files. De-
  fault settings are usually OK for system-wide installation (most common and
  preferable way), just be sure to have write permissions to the temporary di-
  rectory and to the data directory. If you are installing PHOEBE just for a
  single user, you might set up your directories like this:

    *** For single-user access only ***

    Base Directory:        ~/phoebe
    Source Directory:      ~/phoebe/src
    Share Directory:       ~/phoebe/share
    Working Directory:     /tmp
    Data Directory:        ~/phoebe/data

- You may edit PHOEBE configuration files and parameter files by hand. Quali-
  fiers in these files are not order-sensible nor white-space sensitive, which
  means that there is no specific or even preferable order of appearence. If
  you enter an invalid keyword, it will simply be ignored.

FEEDBACK
--------

Please send as much feedback as possible to the author! What you like, what
you don't like, what you'd like changed, what not to change under any cir-
cumstances, ... The easiest way to get in touch is via phoebe-discuss mailing
list. Please take a look at PHOEBE homepage:

	http://phoebe.fiz.uni-lj.si

for details on how to subscribe to the mailing-list.

CONTACTING THE AUTHOR
---------------------

For comments, postcards, bugs, postcards, requests or postcards don't hesitate
to contact the author:

Snail-mail:

	Andrej Prsa
	University of Ljubljana
	Dept. of Astrophysics
	Jadranska 19
	SI-1000 Ljubljana

E-mail:

	andrej.prsa@fmf.uni-lj.si

Phone:

	Work: +386-1-540-13-53
	Cell: +381-31-70-70-21
